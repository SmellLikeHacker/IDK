repeat wait(2) until game:IsLoaded()
if not game:GetService("CoreGui"):FindFirstChild("ServerStat:ByCat") then

-- Instances:

local ServerStatByCat = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local Time = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Value = Instance.new("TextLabel")
local Ping = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Value_2 = Instance.new("TextLabel")
local FPS = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Value_3 = Instance.new("TextLabel")
local Health = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local Value_4 = Instance.new("TextLabel")

--Properties:

ServerStatByCat.Name = "ServerStat:ByCat"
ServerStatByCat.Parent = game:GetService("CoreGui")
ServerStatByCat.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ServerStatByCat.IgnoreGuiInset = true
ServerStatByCat.AutoLocalize = true
ServerStatByCat.ZIndexBehavior = "Global"
ServerStatByCat.ScreenInsets = "DeviceSafeInsets"




Frame.Parent = ServerStatByCat
Frame.AnchorPoint = Vector2.new(0.5, 0)
Frame.BackgroundTransparency = 1.000
Frame.Position = UDim2.new(0.5, 0, 0.005, 0)
Frame.Size = UDim2.new(0.9, 0, 0.025, 0)


UIListLayout.Parent = Frame
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
UIListLayout.Padding = UDim.new(0.001, 0)

Time.Name = "Time"
Time.Parent = Frame
Time.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Time.BackgroundTransparency = 0.500
Time.Size = UDim2.new(0.05, 0, 0.9, 0)

UICorner.Parent = Time

Value.Name = "Value"
Value.Parent = Time
Value.AnchorPoint = Vector2.new(0.5, 0.5)
Value.BackgroundTransparency = 1.000
Value.Position = UDim2.new(0.5, 0, 0.5, 0)
Value.Size = UDim2.new(1, 0, 1, 0)
Value.Font = Enum.Font.PermanentMarker
Value.Text = "00:00:00"
Value.TextColor3 = Color3.fromRGB(0,255,0)
Value.TextScaled = true
Value.TextWrapped = true

Ping.Name = "Ping"
Ping.Parent = Frame
Ping.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Ping.BackgroundTransparency = 0.500
Ping.Size = UDim2.new(0.05, 0, 0.9, 0)

UICorner_2.Parent = Ping

Value_2.Name = "Value"
Value_2.Parent = Ping
Value_2.AnchorPoint = Vector2.new(0.5, 0.5)
Value_2.BackgroundTransparency = 1.000
Value_2.Position = UDim2.new(0.5, 0, 0.5, 0)
Value_2.Size = UDim2.new(1, 0, 1, 0)
Value_2.Font = Enum.Font.PermanentMarker
Value_2.Text = "Ping ...."
Value_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Value_2.TextScaled = true
Value_2.TextWrapped = true

FPS.Name = "FPS"
FPS.Parent = Frame
FPS.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FPS.BackgroundTransparency = 0.500
FPS.Size = UDim2.new(0.05, 0, 0.9, 0)

UICorner_3.Parent = FPS

Value_3.Name = "Value"
Value_3.Parent = FPS
Value_3.AnchorPoint = Vector2.new(0.5, 0.5)
Value_3.BackgroundTransparency = 1.000
Value_3.Position = UDim2.new(0.5, 0, 0.5, 0)
Value_3.Size = UDim2.new(1, 0, 1, 0)
Value_3.Font = Enum.Font.PermanentMarker
Value_3.Text = "FPS ...."
Value_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Value_3.TextScaled = true
Value_3.TextWrapped = true

Health.Name = "Health"
Health.Parent = Frame
Health.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Health.BackgroundTransparency = 0.500
Health.Size = UDim2.new(0.05, 0, 0.9, 0)

UICorner_4.Parent = Health

Value_4.Name = "Value"
Value_4.Parent = Health
Value_4.AnchorPoint = Vector2.new(0.5, 0.5)
Value_4.BackgroundTransparency = 1.000
Value_4.Position = UDim2.new(0.5, 0, 0.5, 0)
Value_4.Size = UDim2.new(1, 0, 1, 0)
Value_4.Font = Enum.Font.PermanentMarker
Value_4.Text = "Health ...."
Value_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Value_4.TextScaled = true
Value_4.TextWrapped = true

local script = Instance.new('LocalScript')
script.Parent = Frame
repeat wait(1) until game:IsLoaded()
	local labels = script.Parent
    spawn(function()
        pcall(function()
            while wait(1) do
                pcall(function()
                	labels.Health.Value.Text = "Health " .. tostring(math.round(game.Players.LocalPlayer.Character.Humanoid.Health))
                	HPP = tonumber(math.floor((math.floor(game.Players.LocalPlayer.Character.Humanoid.Health) / math.floor(game.Players.LocalPlayer.Character.Humanoid.MaxHealth)) * 100))
                    if HPP < 1 then
                	labels.Health.Value.TextColor3 = Color3.fromRGB(255,0,0)
                	elseif HPP < 25 then
                	labels.Health.Value.TextColor3 = Color3.fromRGB(255,100,0)
                	elseif HPP < 50 then
                	labels.Health.Value.TextColor3 = Color3.fromRGB(255,150,0)
                	elseif HPP < 75 then
                	labels.Health.Value.TextColor3 = Color3.fromRGB(255,255,0)
                	elseif HPP <= 100 then
                	labels.Health.Value.TextColor3 = Color3.fromRGB(0,255,0)
                	end
                	
                	local TimeInUnix = os.time()
                	local Lighting = game:GetService("Lighting")
                	local stringToFormat = "%H:%M:%S"
                	local result = os.date(stringToFormat, TimeInUnix)
                    labels.Time.Value.Text = result
                    
                    local splitFps = string.split(game:GetService("Stats").Network.ServerStatsItem["Sent Data Packets"]:GetValueString(),'/')
                    local fps = tostring(math.round(tonumber(splitFps[1])))
            		labels.FPS.Value.Text = "FPS " ..fps 
            	    local splitFpss = string.split(game:GetService("Stats").Network.ServerStatsItem["Sent Data Packets"]:GetValueString(),'/')
                    local fpss = math.round(tonumber(splitFpss[1]))
            	    if fpss < 10 then
            		labels.FPS.Value.TextColor3 = Color3.fromRGB(255,0,0)
            		elseif fpss < 30 then
            		labels.FPS.Value.TextColor3 = Color3.fromRGB(255,255,0)
            		elseif fpss > 30 then
            		labels.FPS.Value.TextColor3 = Color3.fromRGB(0,255,0)
            		end
            		
            		local split = string.split(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(),'(')
                    local ping = math.round(tonumber(split[1]))
                	labels.Ping.Value.Text = "Ping " ..ping
                    if ping < 100 then
                	labels.Ping.Value.TextColor3 = Color3.fromRGB(0,255,0)
                	elseif ping < 200 then
                	labels.Ping.Value.TextColor3 = Color3.fromRGB(255,255,0)
                	elseif ping < 300 then
                	labels.Ping.Value.TextColor3 = Color3.fromRGB(255,150,0)
                	elseif ping < 400 then
                	labels.Ping.Value.TextColor3 = Color3.fromRGB(255,100,0)
                	elseif ping < 500 then
                	labels.Ping.Value.TextColor3 = Color3.fromRGB(255,0,0)
                	end
                end)
            end
        end)
	end)
end
